name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

env:
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  security:
    name: Security
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
        os: [ ubuntu-latest ]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress
      - name: Security Advisories
        run: composer require --dev roave/security-advisories:dev-latest

  psalm:
    name: Psalm
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-dist --no-interaction --no-progress
      - name: Static Analysis
        continue-on-error: true
        run: vendor/bin/psalm --no-cache

  unit-tests:
    name: Unit Tests (${{matrix.php}})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2' ]
        os: [ ubuntu-latest ]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: pecl
          ini-values: "memory_limit=-1"
          extensions: dom, libxml, mbstring
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install --ignore-platform-reqs --prefer-dist --no-interaction --no-progress
      - name: Execute Unit Tests
        run: vendor/bin/phpunit --testdox --verbose --testsuite unit

  feature-tests:
    name: Feature Tests (${{matrix.php}})
    runs-on: ${{ matrix.os }}
    services:
      mysql-service:
        image: mariadb:10.1
        env:
          MYSQL_ROOT_PASSWORD: mysql_password
          MYSQL_DATABASE: laravelsu
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2' ]
        os: [ ubuntu-latest ]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: pecl
          ini-values: "memory_limit=-1"
          extensions: dom, libxml, mbstring, pdo, pdo_mysql
      - name: Validate Composer
        run: composer validate
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-
      - name: Install Dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install --ignore-platform-reqs --prefer-dist --no-interaction --no-progress
      - name: Execute "post-root-package-install" command
        run: composer run-script post-root-package-install
      - name: Execute "post-create-project-cmd" command
        run: composer run-script post-create-project-cmd
      - name: Apply required permissions
        run: chmod -R 0777 storage bootstrap/cache
      - name: Execute Unit Tests
        run: vendor/bin/phpunit --testdox --verbose --testsuite feature
